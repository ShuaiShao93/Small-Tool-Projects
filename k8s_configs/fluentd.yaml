# A fluentd daemonset that filters logs from one app, and sends to logz

{{ if .Values.fluentd.enabled }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: {{ .Values.namespace }}
imagePullSecrets:
  - name: docker-registry-secret
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
rules:
  - apiGroups:
      - ''
    resources:
      - namespaces
      - pods
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluentd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluentd
subjects:
  - kind: ServiceAccount
    name: fluentd
    namespace: {{ .Values.namespace }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: fluentd
  name: fluentd-config
  namespace: {{ .Values.namespace }}
data:
  containers.conf: |
    <source>
      @type tail
      @id in_tail_container_logs
      @label @containers
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type none
      </parse>
    </source>
    <label @containers>
      <filter **>
        @type kubernetes_metadata
      </filter>
      <filter **>
        @type grep
        <regexp>
          key $["kubernetes"]["labels"]["app"]
          pattern "^{{ required ".Values.fluentd.app must be set" .Values.fluentd.app }}$"
        </regexp>
      </filter>
      <filter **>
        @type record_transformer
        <record>
          app "{{ required ".Values.fluentd.app must be set" .Values.fluentd.app }}"
          env "{{ .Values.env_name }}"
        </record>
      </filter>
      <match **>
        @type logzio_buffered
        endpoint_url https://listener.logz.io:8071?token={{ .Values.logzio_token }}
        output_include_time true
        output_include_tags true
        http_idle_timeout 10
        <buffer>
            @type memory
            flush_thread_count 4
            flush_interval 3s
            chunk_limit_size 16m
            queue_limit_length 4096
        </buffer>
      </match>
    </label>
  fluent.conf: |
    @include containers.conf
    <match fluent.**>
      @type null
    </match>
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: fluentd
  name: fluentd
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: fluentd
  template:
    metadata:
      labels:
        app: fluentd
    spec:
      # We need sudo to access /var/log
      securityContext:
        runAsUser: 0
      containers:
        # This is a custom image that's based on logzio/fluentd-docker-logs:1.2.0, with `fluent-gem install fluent-plugin-kubernetes_metadata_filter`
        - image: {{ tpl .Values.fluentd_image . }}
          imagePullPolicy: IfNotPresent
          name: fluentd
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /config-volume
              name: config-volume
            - mountPath: /fluentd/etc
              name: fluentdconf
            - mountPath: /var/log
              name: varlog
            - mountPath: /var/lib/docker/containers
              name: varlibdockercontainers
              readOnly: true
            - mountPath: /run/log/journal
              name: runlogjournal
              readOnly: true
      dnsPolicy: ClusterFirst
      serviceAccount: fluentd
      initContainers:
        - command:
            - sh
            - '-c'
            - cp /config-volume/..data/* /fluentd/etc
          image: alpine:3.18.4
          imagePullPolicy: Always
          name: copy-fluentd-config
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /config-volume
              name: config-volume
            - mountPath: /fluentd/etc
              name: fluentdconf
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: fluentd-config
          name: config-volume
        - emptyDir: {}
          name: fluentdconf
        - hostPath:
            path: /var/log
            type: ''
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
            type: ''
          name: varlibdockercontainers
        - hostPath:
            path: /run/log/journal
            type: ''
          name: runlogjournal
{{ end }}
